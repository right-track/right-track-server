[  {    "type": "GET",    "url": "/about/agencies/:agency/icon",    "title": "Get Agency Icon",    "name": "getAgencyIcon",    "group": "About",    "description": "<p>Get the icon for the specified agency.</p>",    "permission": [      {        "name": "public",        "title": "API-Access: public",        "description": "<p>These API endpoints do not require an API client key.</p>"      }    ],    "parameter": {      "fields": {        "Path Parameters": [          {            "group": "Path",            "type": "string",            "optional": false,            "field": "agency",            "description": "<p>RT Agency Code</p>"          }        ]      }    },    "error": {      "fields": {        "5xx Error Codes": [          {            "group": "5xx Error Codes",            "optional": false,            "field": "500",            "description": "<p>Internal Server Error</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5001",            "description": "<p>API Server Timeout</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5002",            "description": "<p>API Server Error</p>"          }        ],        "404 Error Codes": [          {            "group": "404 Error Codes",            "optional": false,            "field": "4041",            "description": "<p>Unsupported Agency</p>"          },          {            "group": "404 Error Codes",            "optional": false,            "field": "4049",            "description": "<p>Agency Icon Not Found</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/about/routes.js",    "groupTitle": "About"  },  {    "type": "GET",    "url": "/about/agencies/:agency",    "title": "Get Agency Information",    "name": "getAgencyInformation",    "group": "About",    "description": "<p>Get information about the specified agency.</p>",    "permission": [      {        "name": "public",        "title": "API-Access: public",        "description": "<p>These API endpoints do not require an API client key.</p>"      }    ],    "parameter": {      "fields": {        "Path Parameters": [          {            "group": "Path",            "type": "string",            "optional": false,            "field": "agency",            "description": "<p>RT Agency Code</p>"          }        ]      }    },    "error": {      "fields": {        "5xx Error Codes": [          {            "group": "5xx Error Codes",            "optional": false,            "field": "500",            "description": "<p>Internal Server Error</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5001",            "description": "<p>API Server Timeout</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5002",            "description": "<p>API Server Error</p>"          }        ],        "404 Error Codes": [          {            "group": "404 Error Codes",            "optional": false,            "field": "4041",            "description": "<p>Unsupported Agency</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Example Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"response\": {\n    \"agency\": {\n      \"id\": \"mnr\",\n      \"name\": \"Metro North Railroad & SLE\",\n      \"database\": {\n        \"version\": 2018011016,\n        \"publish\": 20180108,\n        \"compile\": 20180110,\n        \"notes\": \"This update fixes some trips and transfer connections on the New Haven Line\"\n      },\n      \"maintainer\": {\n        \"name\": \"David Waring\",\n        \"email\": \"mnr@righttrack.io\"\n      }\n    }\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/about/routes.js",    "groupTitle": "About"  },  {    "type": "GET",    "url": "/about/agencies/:agency/links",    "title": "Get Agency Links",    "name": "getAgencyLinks",    "group": "About",    "description": "<p>Get the set of links for additional resources for the specified agency.</p>",    "permission": [      {        "name": "public",        "title": "API-Access: public",        "description": "<p>These API endpoints do not require an API client key.</p>"      }    ],    "parameter": {      "fields": {        "Path Parameters": [          {            "group": "Path",            "type": "string",            "optional": false,            "field": "agency",            "description": "<p>RT Agency Code</p>"          }        ]      }    },    "error": {      "fields": {        "5xx Error Codes": [          {            "group": "5xx Error Codes",            "optional": false,            "field": "500",            "description": "<p>Internal Server Error</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5001",            "description": "<p>API Server Timeout</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5002",            "description": "<p>API Server Error</p>"          }        ],        "404 Error Codes": [          {            "group": "404 Error Codes",            "optional": false,            "field": "4041",            "description": "<p>Unsupported Agency</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Example Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"response\": {\n    \"agency\": \"mnr\",\n    \"links\": [\n      {\n        \"category\": \"App Resources\",\n        \"links\": [\n          {\n            \"title\": \"Google Play\",\n            \"description\": \"View Right Track: Metro North's listing in the Google Play store.  Install updates, rate the app and leave comments.\",\n            \"url\": \"https://play.google.com/store/apps/details?id=com.waring.MNRTrainTime\"\n          },\n          {\n            \"...\": \"...\"\n          }\n        ]\n      },\n      {\n        \"...\": \"...\"\n      }\n    ]\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/about/routes.js",    "groupTitle": "About"  },  {    "type": "GET",    "url": "/about/agencies",    "title": "Get All Agency Information",    "name": "getAllAgencyInformation",    "group": "About",    "description": "<p>Get information about all of the agencies supported by the Right Track API Server.</p>",    "permission": [      {        "name": "public",        "title": "API-Access: public",        "description": "<p>These API endpoints do not require an API client key.</p>"      }    ],    "error": {      "fields": {        "5xx Error Codes": [          {            "group": "5xx Error Codes",            "optional": false,            "field": "500",            "description": "<p>Internal Server Error</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5001",            "description": "<p>API Server Timeout</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5002",            "description": "<p>API Server Error</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Example Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"response\": {\n    \"agencies\": [\n      {\n        \"id\": \"lirr\",\n        \"name\": \"Long Island Rail Road\",\n        \"database\": {\n          \"version\": 2018010816,\n          \"publish\": 20180108,\n          \"compile\": 20180108,\n          \"notes\": \"This schedule database was automatically compiled on 1/8/2018, 4:15:03 PM due to a schedule data update from Long Island Rail Road.\"\n        },\n        \"maintainer\": {\n          \"name\": \"David Waring\",\n          \"email\": \"lirr@righttrack.io\"\n        }\n      },\n      {\n        \"...\": \"...\"\n      }\n    ]\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/about/routes.js",    "groupTitle": "About"  },  {    "type": "GET",    "url": "/about",    "title": "Get Server Information",    "name": "getServerInformation",    "group": "About",    "description": "<p>Get information about the Right Track API Server and its supported agencies and transit agencies.</p>",    "permission": [      {        "name": "public",        "title": "API-Access: public",        "description": "<p>These API endpoints do not require an API client key.</p>"      }    ],    "error": {      "fields": {        "5xx Error Codes": [          {            "group": "5xx Error Codes",            "optional": false,            "field": "500",            "description": "<p>Internal Server Error</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5001",            "description": "<p>API Server Timeout</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5002",            "description": "<p>API Server Error</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Example Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"response\": {\n    \"server\": {\n      \"name\": \"Right Track API Server [ALPHA]\",\n      \"version\": \"1.1.2\",\n      \"host\": \"localhost:3000\",\n      \"hostname\": \"FINS.local\"\n      \"maintainer\": {\n        \"name\": \"David Waring\",\n        \"email\": \"webmaster@righttrack.io\",\n        \"source\": \"https://github.com/right-track/right-track-server\"\n      }\n    },\n    \"agencies\": [\n      {\n        \"id\": \"lirr\",\n        \"name\": \"Long Island Rail Road\",\n        \"database\": {\n          \"version\": 2018010816,\n          \"publish\": 20180108,\n          \"compile\": 20180108,\n          \"notes\": \"This schedule database was automatically compiled on 1/8/2018, 4:15:03 PM due to a schedule data update from Long Island Rail Road.\"\n        },\n        \"maintainer\": {\n          \"name\": \"David Waring\",\n          \"email\": \"lirr@righttrack.io\"\n        }\n      },\n      {\n        \"...\": \"...\"\n      }\n    ]\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/about/routes.js",    "groupTitle": "About"  },  {    "type": "GET",    "url": "/admin/config",    "title": "Get Server Config",    "name": "getServerConfig",    "group": "Admin",    "description": "<p>Disply the API Server Configuration.</p>",    "permission": [      {        "name": "debug",        "title": "API-Access: debug",        "description": "<p>These API endpoints require an API client key with 'debug' privileges.  These endpoints can display sensitive information and need to be explicitly enabled.</p>"      }    ],    "parameter": {      "fields": {        "Headers": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Token {API Key}</p>"          }        ]      }    },    "error": {      "fields": {        "5xx Error Codes": [          {            "group": "5xx Error Codes",            "optional": false,            "field": "500",            "description": "<p>Internal Server Error</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5001",            "description": "<p>API Server Timeout</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5002",            "description": "<p>API Server Error</p>"          }        ],        "403 Error Codes": [          {            "group": "403 Error Codes",            "optional": false,            "field": "403",            "description": "<p>API Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4031",            "description": "<p>Debug Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4039",            "description": "<p>Authorization Header Format Error</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Example Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"response\": {\n    \"config\": {\n      \"name\": \"Right Track API Server\",\n      \"version\": \"0.0.1\",\n      \"host\": \"localhost\",\n      \"port\": 3000,\n      \"timeout\": 5,\n      \"maintainer\": {\n        \"name\": \"David Waring\",\n        \"email\": \"webmaster@righttrack.io\",\n        \"source\": \"https://github.com/dwaring87/right-track-api-server\"\n      },\n      \"database\": {\n        \"host\": \"127.0.0.1\",\n        \"username\": \"mysql_username\",\n        \"password\": \"mysql_password\",\n        \"name\": \"rt_api\"\n      },\n      \"agencies\": [\n        {\n          \"id\": \"mnr\",\n          \"require\": \"/Users/david/Documents/Development/right-track/src/agency-mnr\",\n          \"config\": \"/Users/david/Documents/Development/right-track/etc/mnr.json\",\n          \"agencyConfig\": {\n            \"name\": \"Metro North Railroad & SLE\",\n            \"id\": \"mnr\",\n            \"db_location\": \"/Users/david/Documents/Development/right-track/db/db_latest/mnr/database.db\",\n            \"db_archive_location\": \"/Users/david/Documents/Development/right-track/db/db_archive/mnr/\",\n            \"icon_location\": \"/Users/david/Documents/Development/right-track/src/agency-mnr/static/img/icon.png\",\n          \"maintainer\": {\n            \"name\": \"David Waring\",\n            \"email\": \"dev@davidwaring.net\",\n            \"website\": \"https://www.davidwaring.net/\"\n          }\n        },\n        {\n          \"...\": \"...\"\n        }\n      ],\n      \"registration\": {\n        \"username\": {\n          \"cannotContain\": \"@ \",\n          \"minLength\": 4,\n          \"maxLength\": 64\n        },\n        \"password\": {\n          \"minLength\": 8,\n          \"maxLength\": 999,\n          \"requireLetters\": true,\n          \"requireUppercase\": false,\n          \"requireLowercase\": false,\n          \"requireDigits\": true,\n          \"requireSymbols\": false,\n          \"blockUsername\": true,\n          \"blacklist\": \"/Users/david/Documents/Development/right-track/src/api-server/password-blacklist.txt\"\n        }\n      },\n      \"allowDebugAccess\": false\n    }\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/admin/routes.js",    "groupTitle": "Admin"  },  {    "type": "GET",    "url": "/admin/state",    "title": "Get Server State",    "name": "getServerState",    "group": "Admin",    "description": "<p>Get stats about the API Server state such as memory usage and uptime.</p>",    "permission": [      {        "name": "admin",        "title": "API-Access: admin",        "description": "<p>These API endpoints require an API client key with 'admin' privileges.  These endpoints alter the state of the API server.</p>"      }    ],    "parameter": {      "fields": {        "Headers": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Token {API Key}</p>"          }        ]      }    },    "error": {      "fields": {        "5xx Error Codes": [          {            "group": "5xx Error Codes",            "optional": false,            "field": "500",            "description": "<p>Internal Server Error</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5001",            "description": "<p>API Server Timeout</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5002",            "description": "<p>API Server Error</p>"          }        ],        "403 Error Codes": [          {            "group": "403 Error Codes",            "optional": false,            "field": "403",            "description": "<p>API Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4031",            "description": "<p>Debug Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4039",            "description": "<p>Authorization Header Format Error</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Example Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"response\": {\n    \"system\": {\n      \"platform\": \"darwin\",\n      \"arch\": \"x64\",\n      \"cpus\": 4\n    },\n    \"command\": {\n      \"cwd\": \"/right-track/src/server\",\n      \"argv\": [\n        \"/opt/homebrew/Cellar/node/8.4.0/bin/node\",\n        \"/right-track/src/server/src/server.js\",\n        \"../../etc/server.json\"\n      ],\n      \"uid\": 501,\n      \"gid\": 20\n    },\n    \"process\": {\n      \"pid\": 21562,\n      \"title\": \"right-track-server\",\n      \"memory\": {\n        \"mb\": 51.44140625,\n        \"percent\": 0.6279468536376953,\n        \"bytes\": {\n          \"rss\": 53940224,\n          \"heapTotal\": 34131968,\n          \"heapUsed\": 17577200,\n          \"external\": 809340\n        }\n      },\n      \"uptime\": \"00:10:25\"\n    }\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/admin/routes.js",    "groupTitle": "Admin"  },  {    "type": "GET",    "url": "/admin/reload",    "title": "Reload Server",    "name": "reloadServer",    "group": "Admin",    "description": "<p>Reload the API Server and Agency configuration files as well as reload the agency databases and reconnect to the Server's MySQL database.</p>",    "permission": [      {        "name": "admin",        "title": "API-Access: admin",        "description": "<p>These API endpoints require an API client key with 'admin' privileges.  These endpoints alter the state of the API server.</p>"      }    ],    "parameter": {      "fields": {        "Headers": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Token {API Key}</p>"          }        ]      }    },    "error": {      "fields": {        "5xx Error Codes": [          {            "group": "5xx Error Codes",            "optional": false,            "field": "500",            "description": "<p>Internal Server Error</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5001",            "description": "<p>API Server Timeout</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5002",            "description": "<p>API Server Error</p>"          }        ],        "403 Error Codes": [          {            "group": "403 Error Codes",            "optional": false,            "field": "403",            "description": "<p>API Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4031",            "description": "<p>Debug Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4039",            "description": "<p>Authorization Header Format Error</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Example Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"response\": {}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/admin/routes.js",    "groupTitle": "Admin"  },  {    "type": "POST",    "url": "/auth/login",    "title": "User Login",    "name": "userLogin",    "group": "Auth",    "description": "<p>Create a new session and return the session information to the user.</p>",    "permission": [      {        "name": "auth",        "title": "API-Access: auth",        "description": "<p>These API endpoints require an API client key with 'auth' privileges.  These endpoints allow User's to login and logout of the client.</p>"      }    ],    "parameter": {      "fields": {        "Headers": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Token {API Key}</p>"          },          {            "group": "Header",            "type": "string",            "allowedValues": [              "\"application/json\"",              "\"application/x-www-form-urlencoded\""            ],            "optional": false,            "field": "Content-Type",            "description": "<p>Media type of the Request body.</p>"          }        ],        "Body Parameters": [          {            "group": "Body",            "type": "string",            "optional": false,            "field": "login",            "description": "<p>The User's email or username</p>"          },          {            "group": "Body",            "type": "string",            "optional": false,            "field": "password",            "description": "<p>The User's password</p>"          }        ]      }    },    "error": {      "fields": {        "5xx Error Codes": [          {            "group": "5xx Error Codes",            "optional": false,            "field": "500",            "description": "<p>Internal Server Error</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5001",            "description": "<p>API Server Timeout</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5002",            "description": "<p>API Server Error</p>"          }        ],        "403 Error Codes": [          {            "group": "403 Error Codes",            "optional": false,            "field": "403",            "description": "<p>API Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4031",            "description": "<p>Debug Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4039",            "description": "<p>Authorization Header Format Error</p>"          }        ],        "401 Error Codes": [          {            "group": "401 Error Codes",            "optional": false,            "field": "401",            "description": "<p>Not Authorized</p>"          },          {            "group": "401 Error Codes",            "optional": false,            "field": "4019",            "description": "<p>User Not Registered</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Example Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"response\": {\n    \"user\": {\n      \"id\": \"f094eebab41c4f4fa209f8af48b51d4b\",\n      \"username\": \"user1\",\n      \"email\": \"test@example.com\",\n      \"verified\": false,\n      \"lastModifiedUser\": \"2017-09-24T20:56:00.000Z\",\n      \"lastModifiedPassword\": \"2017-09-24T20:56:00.000Z\"\n    },\n    \"session\": {\n      \"id\": \"f6460cb2761b4652a658bc769ed9b47b\",\n      \"client_name\": \"Right Track API Server [node]\",\n      \"created\": \"2017-09-24T20:35:00.000Z\",\n      \"accessed\": \"2017-09-24T20:35:00.000Z\",\n      \"inactive\": \"2017-10-01T20:35:00.000Z\",\n      \"expires\": \"2017-10-24T20:35:00.000Z\"\n    }\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/auth/routes.js",    "groupTitle": "Auth"  },  {    "type": "DELETE",    "url": "/auth/logout/:userID",    "title": "User Logout",    "name": "userLogout",    "group": "Auth",    "description": "<p>If the Session is valid for the User, remove it from the Server database (invalidating it from any further use).</p>",    "permission": [      {        "name": "auth",        "title": "API-Access: auth",        "description": "<p>These API endpoints require an API client key with 'auth' privileges.  These endpoints allow User's to login and logout of the client.</p>"      }    ],    "parameter": {      "fields": {        "Headers": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Token {API Key}</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "X-Session-Token",            "description": "<p>{User Session Token}</p>"          },          {            "group": "Header",            "type": "string",            "allowedValues": [              "\"application/json\"",              "\"application/x-www-form-urlencoded\""            ],            "optional": false,            "field": "Content-Type",            "description": "<p>Media type of the Request body.</p>"          }        ],        "Path Parameters": [          {            "group": "Path",            "type": "string",            "optional": false,            "field": "userID",            "description": "<p>Public ID</p>"          }        ]      }    },    "error": {      "fields": {        "5xx Error Codes": [          {            "group": "5xx Error Codes",            "optional": false,            "field": "500",            "description": "<p>Internal Server Error</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5001",            "description": "<p>API Server Timeout</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5002",            "description": "<p>API Server Error</p>"          }        ],        "403 Error Codes": [          {            "group": "403 Error Codes",            "optional": false,            "field": "403",            "description": "<p>API Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4031",            "description": "<p>Debug Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4039",            "description": "<p>Authorization Header Format Error</p>"          }        ],        "401 Error Codes": [          {            "group": "401 Error Codes",            "optional": false,            "field": "401",            "description": "<p>Not Authorized</p>"          },          {            "group": "401 Error Codes",            "optional": false,            "field": "4011",            "description": "<p>X-Session-Token Header Not Sent</p>"          },          {            "group": "401 Error Codes",            "optional": false,            "field": "4012",            "description": "<p>Session Expired</p>"          }        ],        "404 Error Codes": [          {            "group": "404 Error Codes",            "optional": false,            "field": "4043",            "description": "<p>User Not Found</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Example Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"response\": {\n    \"session\": {}\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/auth/routes.js",    "groupTitle": "Auth"  },  {    "type": "POST",    "url": "/favorites/:agency/:userID",    "title": "Add Favorites",    "name": "addFavorites",    "group": "Favorites",    "description": "<p>Save the list of agency favorites for the specified User. Note: this will <strong>overwrite</strong> any existing favorites for the same agency.</p> <h3>Body Format</h3> <p>The Body of the request should have the following format.  The <code>favorites</code> property is an array of favorites.  Pass an empty array to remove any existing favorites for the agency. Use the given examples for format the properties of each favorite.</p> <p><strong>Body:</strong></p> <pre><code>{ &quot;favorites&quot;: [ { &quot;type&quot;: 1, ... }, { &quot;type&quot;: 2, ... } ] } </code></pre>",    "examples": [      {        "title": "Example Favorite Station",        "content": "{\n  \"type\": 1,\n  \"sequence\": 1,\n  \"stop\": {\n    \"id\": \"1\",\n    \"statusId\": \"56\",\n    \"name\": \"Fordham\"\n  },\n  \"options\": {}\n}",        "type": "json"      },      {        "title": "Example Favorite Trip",        "content": "{\n  \"type\": 2,\n  \"sequence\": 2,\n  \"origin\": {\n    \"id\": \"1\",\n    \"statusId\": \"1\",\n    \"name\": \"Grand Central Terminal\"\n  },\n  \"destination\": {\n    \"id\": \"110\",\n    \"statusId\": \"110\",\n    \"name\": \"Larchmont\"\n  },\n  \"options\": {\n    \"allowTransfers\": true\n  }\n}",        "type": "json"      }    ],    "permission": [      {        "name": "favorites",        "title": "API-Access: favorites",        "description": "<p>These API endpoints require an API client key with 'favorites' privileges.  These endpoints can access and modify a User's favorites.</p>"      }    ],    "parameter": {      "fields": {        "Headers": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Token {API Key}</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "X-Session-Token",            "description": "<p>{User Session Token}</p>"          },          {            "group": "Header",            "type": "string",            "allowedValues": [              "\"application/json\"",              "\"application/x-www-form-urlencoded\""            ],            "optional": false,            "field": "Content-Type",            "description": "<p>Media type of the Request body.</p>"          }        ],        "Path Parameters": [          {            "group": "Path",            "type": "string",            "optional": false,            "field": "agency",            "description": "<p>RT Agency Code</p>"          },          {            "group": "Path",            "type": "string",            "optional": false,            "field": "userID",            "description": "<p>Public ID</p>"          }        ],        "Body Parameters": [          {            "group": "Body",            "type": "Favorite[]",            "optional": false,            "field": "favorites",            "description": "<p>List of Favorites</p>"          }        ]      }    },    "error": {      "fields": {        "5xx Error Codes": [          {            "group": "5xx Error Codes",            "optional": false,            "field": "500",            "description": "<p>Internal Server Error</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5001",            "description": "<p>API Server Timeout</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5002",            "description": "<p>API Server Error</p>"          }        ],        "403 Error Codes": [          {            "group": "403 Error Codes",            "optional": false,            "field": "403",            "description": "<p>API Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4031",            "description": "<p>Debug Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4039",            "description": "<p>Authorization Header Format Error</p>"          }        ],        "401 Error Codes": [          {            "group": "401 Error Codes",            "optional": false,            "field": "401",            "description": "<p>Not Authorized</p>"          },          {            "group": "401 Error Codes",            "optional": false,            "field": "4011",            "description": "<p>X-Session-Token Header Not Sent</p>"          },          {            "group": "401 Error Codes",            "optional": false,            "field": "4012",            "description": "<p>Session Expired</p>"          }        ],        "404 Error Codes": [          {            "group": "404 Error Codes",            "optional": false,            "field": "4041",            "description": "<p>Unsupported Agency</p>"          },          {            "group": "404 Error Codes",            "optional": false,            "field": "4043",            "description": "<p>User Not Found</p>"          }        ],        "400 Error Codes": [          {            "group": "400 Error Codes",            "optional": false,            "field": "4006",            "description": "<p>Favorites Not Valid</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Example Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"response\": {\n    \"agency\": \"mnr\",\n    \"lastModified\": \"Mon Sep 25 2017 18:55:41 GMT-0400 (EDT)\",\n    \"favorites\": [\n      {\n        \"type\": 1,\n        \"sequence\": 1,\n        \"stop\": {\n          \"id\": \"56\",\n          \"statusId\": \"56\",\n          \"name\": \"Fordham\"\n        },\n        \"options\": {}\n      },\n      {\n        \"type\": 2,\n        \"sequence\": 2,\n        \"origin\": {\n          \"id\": \"1\",\n          \"statusId\": \"1\",\n          \"name\": \"Grand Central Terminal\"\n        },\n        \"destination\": {\n          \"id\": \"110\",\n          \"statusId\": \"110\",\n          \"name\": \"Larchmont\"\n        },\n        \"options\": {\n          \"allowTransfers\": true\n        }\n      },\n      {\n        \"...\": \"...\"\n      }\n    ]\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/favorites/routes.js",    "groupTitle": "Favorites"  },  {    "type": "GET",    "url": "/favorites/:agency/:userID",    "title": "Get Favorites",    "name": "getFavorites",    "group": "Favorites",    "description": "<p>Get the list of favorites for the specified user on the specified agency.</p>",    "permission": [      {        "name": "favorites",        "title": "API-Access: favorites",        "description": "<p>These API endpoints require an API client key with 'favorites' privileges.  These endpoints can access and modify a User's favorites.</p>"      }    ],    "parameter": {      "fields": {        "Headers": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Token {API Key}</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "X-Session-Token",            "description": "<p>{User Session Token}</p>"          }        ],        "Path Parameters": [          {            "group": "Path",            "type": "string",            "optional": false,            "field": "agency",            "description": "<p>RT Agency Code</p>"          },          {            "group": "Path",            "type": "string",            "optional": false,            "field": "userID",            "description": "<p>Public ID</p>"          }        ]      }    },    "error": {      "fields": {        "5xx Error Codes": [          {            "group": "5xx Error Codes",            "optional": false,            "field": "500",            "description": "<p>Internal Server Error</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5001",            "description": "<p>API Server Timeout</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5002",            "description": "<p>API Server Error</p>"          }        ],        "403 Error Codes": [          {            "group": "403 Error Codes",            "optional": false,            "field": "403",            "description": "<p>API Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4031",            "description": "<p>Debug Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4039",            "description": "<p>Authorization Header Format Error</p>"          }        ],        "401 Error Codes": [          {            "group": "401 Error Codes",            "optional": false,            "field": "401",            "description": "<p>Not Authorized</p>"          },          {            "group": "401 Error Codes",            "optional": false,            "field": "4011",            "description": "<p>X-Session-Token Header Not Sent</p>"          },          {            "group": "401 Error Codes",            "optional": false,            "field": "4012",            "description": "<p>Session Expired</p>"          }        ],        "404 Error Codes": [          {            "group": "404 Error Codes",            "optional": false,            "field": "4041",            "description": "<p>Unsupported Agency</p>"          },          {            "group": "404 Error Codes",            "optional": false,            "field": "4043",            "description": "<p>User Not Found</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Example Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"response\": {\n    \"agency\": \"mnr\",\n    \"lastModified\": \"Mon Sep 25 2017 18:55:41 GMT-0400 (EDT)\",\n    \"favorites\": [\n      {\n        \"type\": 1,\n        \"sequence\": 1,\n        \"stop\": {\n          \"id\": \"1\",\n          \"statusId\": \"1\",\n          \"name\": \"Grand Central Terminal\"\n        },\n        \"options\": {}\n      },\n      {\n        \"type\": 2,\n        \"sequence\": 2,\n        \"origin\": {\n          \"id\": \"1\",\n          \"statusId\": \"1\",\n          \"name\": \"Grand Central Terminal\"\n        },\n        \"destination\": {\n          \"id\": \"110\",\n          \"statusId\": \"110\",\n          \"name\": \"Larchmont\"\n        },\n          \"options\": {\n          \"allowTransfers\": true\n        }\n      },\n      {\n        \"...\": \"...\"\n      }\n    ]\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/favorites/routes.js",    "groupTitle": "Favorites"  },  {    "type": "HEAD",    "url": "/favorites/:agency/:userID",    "title": "Get Favorites Modification Date",    "name": "getFavoritesModificationDate",    "group": "Favorites",    "description": "<p>Get the last modified date of the User's favorites for the specified agency.</p> <h3>Existing Favorites</h3> <p>If the User has existing favorites for the agency, then the Server will return a status code of <code>200</code> and the <code>Last-Modified</code> Header will be set to the date &amp; time the User's favorites were last modified.</p> <h3>No Existing Favorites</h3> <p>If the User does NOT have favorites for the agency, then the Server will return a status code of <code>204</code> to indicate there is no saved content.</p>",    "permission": [      {        "name": "favorites",        "title": "API-Access: favorites",        "description": "<p>These API endpoints require an API client key with 'favorites' privileges.  These endpoints can access and modify a User's favorites.</p>"      }    ],    "parameter": {      "fields": {        "Headers": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Token {API Key}</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "X-Session-Token",            "description": "<p>{User Session Token}</p>"          }        ],        "Path Parameters": [          {            "group": "Path",            "type": "string",            "optional": false,            "field": "agency",            "description": "<p>RT Agency Code</p>"          },          {            "group": "Path",            "type": "string",            "optional": false,            "field": "userID",            "description": "<p>Public ID</p>"          }        ]      }    },    "success": {      "fields": {        "2xx Success": [          {            "group": "2xx Success",            "optional": false,            "field": "200",            "description": "<p>Use <code>Last-Modified Header</code> to get last modified date/time of User's agency favorites</p>"          },          {            "group": "2xx Success",            "optional": false,            "field": "204",            "description": "<p>User exists but has no favorites for the specified agency.</p>"          }        ]      }    },    "error": {      "fields": {        "5xx Error Codes": [          {            "group": "5xx Error Codes",            "optional": false,            "field": "500",            "description": "<p>Internal Server Error</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5001",            "description": "<p>API Server Timeout</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5002",            "description": "<p>API Server Error</p>"          }        ],        "403 Error Codes": [          {            "group": "403 Error Codes",            "optional": false,            "field": "403",            "description": "<p>API Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4031",            "description": "<p>Debug Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4039",            "description": "<p>Authorization Header Format Error</p>"          }        ],        "401 Error Codes": [          {            "group": "401 Error Codes",            "optional": false,            "field": "401",            "description": "<p>Not Authorized</p>"          },          {            "group": "401 Error Codes",            "optional": false,            "field": "4011",            "description": "<p>X-Session-Token Header Not Sent</p>"          },          {            "group": "401 Error Codes",            "optional": false,            "field": "4012",            "description": "<p>Session Expired</p>"          }        ],        "404 Error Codes": [          {            "group": "404 Error Codes",            "optional": false,            "field": "4041",            "description": "<p>Unsupported Agency</p>"          },          {            "group": "404 Error Codes",            "optional": false,            "field": "4043",            "description": "<p>User Not Found</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "src/routes/favorites/routes.js",    "groupTitle": "Favorites"  },  {    "type": "GET",    "url": "/stops/:agency/:stopID/feed",    "title": "Station Feed",    "name": "stationFeed",    "group": "RealTime",    "description": "<p>Display the real-time status and track information for upcoming departures</p>",    "permission": [      {        "name": "stations",        "title": "API-Access: stations",        "description": "<p>These API endpoints require an API client key with 'stations' privileges.  These endpoints can access the real-time status and track information of supported Station Feeds.</p>"      }    ],    "parameter": {      "fields": {        "Headers": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Token {API Key}</p>"          }        ],        "Path Parameters": [          {            "group": "Path",            "type": "string",            "optional": false,            "field": "agency",            "description": "<p>RT Agency Code</p>"          },          {            "group": "Path",            "type": "string",            "optional": false,            "field": "stopID",            "description": "<p>GTFS Stop ID</p>"          }        ]      }    },    "error": {      "fields": {        "5xx Error Codes": [          {            "group": "5xx Error Codes",            "optional": false,            "field": "500",            "description": "<p>Internal Server Error</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5001",            "description": "<p>API Server Timeout</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5002",            "description": "<p>API Server Error</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5003",            "description": "<p>Could Not Parse Station Data</p>"          }        ],        "403 Error Codes": [          {            "group": "403 Error Codes",            "optional": false,            "field": "403",            "description": "<p>API Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4031",            "description": "<p>Debug Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4039",            "description": "<p>Authorization Header Format Error</p>"          }        ],        "404 Error Codes": [          {            "group": "404 Error Codes",            "optional": false,            "field": "4041",            "description": "<p>Unsupported Agency</p>"          }        ],        "400 Error Codes": [          {            "group": "400 Error Codes",            "optional": false,            "field": "4007",            "description": "<p>Unsupported Station</p>"          }        ],        "405 Error Codes": [          {            "group": "405 Error Codes",            "optional": false,            "field": "4051",            "description": "<p>Station Feeds Not Supported</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Example Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"response\": {\n    \"feed\": {\n      \"updated\": \"Wed, 04 Oct 2017 19:52:25 GMT\",\n      \"origin\": {\n        \"id\": \"1\",\n        \"name\": \"Grand Central Terminal\",\n        \"lat\": 40.752998,\n        \"lon\": -73.977056,\n        \"url\": \"http://as0.mta.info/mnr/stations/station_detail.cfm?key=1\",\n        \"wheelchairBoarding\": 1\n      },\n      \"departures\": [\n        {\n          \"departure\": {\n            \"time\": \"3:52 PM\",\n            \"seconds\": 57120,\n            \"date\": 20171004\n          },\n          \"destination\": {\n            \"id\": \"20\",\n            \"name\": \"Greystone\",\n            \"lat\": 40.972705,\n            \"lon\": -73.889069,\n            \"url\": \"http://as0.mta.info/mnr/stations/station_detail.cfm?key=20\",\n            \"wheelchairBoarding\": 1\n          },\n          \"trip\": {\n            \"id\": \"7993414\",\n            \"route\": {\n              \"id\": \"1\",\n              \"shortName\": null,\n              \"longName\": \"Hudson\",\n              \"type\": 2,\n              \"color\": \"009B3A\",\n              \"textColor\": \"FFFFFF\",\n              \"agency\": {\n                \"id\": \"1\",\n                \"name\": \"Metro-North Railroad\",\n                \"url\": \"http://www.mta.info/mnr\",\n                \"timezone\": \"America/New_York\"\n              }\n            },\n            \"shortName\": \"443\",\n            \"wheelchairAccessible\": 1,\n            \"direction\": {\n              \"id\": 0,\n              \"description\": \"Outbound\"\n            },\n            \"stops\": [\n              {\n                \"stop\": {\n                  \"id\": \"1\",\n                  \"name\": \"Grand Central Terminal\",\n                  \"lat\": 40.752998,\n                  \"lon\": -73.977056,\n                  \"url\": \"http://as0.mta.info/mnr/stations/station_detail.cfm?key=1\",\n                  \"wheelchairBoarding\": 1\n                },\n                \"arrival\": {\n                  \"time\": \"3:52 PM\",\n                  \"seconds\": 57120\n                },\n                \"departure\": {\n                  \"time\": \"3:52 PM\",\n                  \"seconds\": 57120\n                },\n                \"stopSequence\": 1,\n                \"pickupType\": 0,\n                \"dropOffType\": 0,\n                \"date\": 20171004\n              },\n              {\n                \"...\": \"...\"\n              }\n            ]\n          },\n          \"status\": {\n            \"status\": \"Scheduled\",\n            \"delay\": 0,\n            \"estimatedDeparture\": {\n              \"time\": \"3:57 PM\",\n              \"seconds\": 57420,\n              \"date\": 20171004\n            }\n          }\n        },\n        {\n          \"...\": \"...\"\n        }\n      ]\n    }\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/realtime/routes.js",    "groupTitle": "RealTime"  },  {    "type": "GET",    "url": "/routes/:agency/:routeID",    "title": "Get Route",    "name": "getRoute",    "group": "Routes",    "description": "<p>Get the specified GTFS Route for the specified agency.</p>",    "permission": [      {        "name": "gtfs",        "title": "API-Access: gtfs",        "description": "<p>These API endpoints require an API client key with 'gtfs' privileges.  These endpoints query the agencies' Right Track Databases and display the GTFS data classes.</p>"      }    ],    "parameter": {      "fields": {        "Headers": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Token {API Key}</p>"          }        ],        "Path Parameters": [          {            "group": "Path",            "type": "string",            "optional": false,            "field": "agency",            "description": "<p>RT Agency Code</p>"          },          {            "group": "Path",            "type": "string",            "optional": false,            "field": "routeID",            "description": "<p>GTFS Route ID</p>"          }        ]      }    },    "error": {      "fields": {        "5xx Error Codes": [          {            "group": "5xx Error Codes",            "optional": false,            "field": "500",            "description": "<p>Internal Server Error</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5001",            "description": "<p>API Server Timeout</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5002",            "description": "<p>API Server Error</p>"          }        ],        "403 Error Codes": [          {            "group": "403 Error Codes",            "optional": false,            "field": "403",            "description": "<p>API Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4031",            "description": "<p>Debug Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4039",            "description": "<p>Authorization Header Format Error</p>"          }        ],        "404 Error Codes": [          {            "group": "404 Error Codes",            "optional": false,            "field": "4041",            "description": "<p>Unsupported Agency</p>"          },          {            "group": "404 Error Codes",            "optional": false,            "field": "4042",            "description": "<p>Route Not Found</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Example Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"response\": {\n    \"agency\": \"mnr\",\n    \"route\": {\n      \"id\": \"1\",\n      \"shortName\": \"Hudson\",\n      \"longName\": \"Hudson\",\n      \"type\": 2,\n      \"color\": \"009B3A\",\n      \"textColor\": \"FFFFFF\",\n      \"agency\": {\n        \"id\": \"1\",\n        \"name\": \"Metro-North Railroad\",\n        \"url\": \"http://www.mta.info/mnr\",\n        \"timezone\": \"America/New_York\"\n      }\n    }\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/routes/routes.js",    "groupTitle": "Routes"  },  {    "type": "GET",    "url": "/routes/:agency",    "title": "Get Routes",    "name": "getRoutes",    "group": "Routes",    "description": "<p>Get the GTFS Routes for the specified agency.</p>",    "permission": [      {        "name": "gtfs",        "title": "API-Access: gtfs",        "description": "<p>These API endpoints require an API client key with 'gtfs' privileges.  These endpoints query the agencies' Right Track Databases and display the GTFS data classes.</p>"      }    ],    "parameter": {      "fields": {        "Headers": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Token {API Key}</p>"          }        ],        "Path Parameters": [          {            "group": "Path",            "type": "string",            "optional": false,            "field": "agency",            "description": "<p>RT Agency Code</p>"          }        ]      }    },    "error": {      "fields": {        "5xx Error Codes": [          {            "group": "5xx Error Codes",            "optional": false,            "field": "500",            "description": "<p>Internal Server Error</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5001",            "description": "<p>API Server Timeout</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5002",            "description": "<p>API Server Error</p>"          }        ],        "403 Error Codes": [          {            "group": "403 Error Codes",            "optional": false,            "field": "403",            "description": "<p>API Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4031",            "description": "<p>Debug Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4039",            "description": "<p>Authorization Header Format Error</p>"          }        ],        "404 Error Codes": [          {            "group": "404 Error Codes",            "optional": false,            "field": "4041",            "description": "<p>Unsupported Agency</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Example Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"response\": {\n    \"agency\": \"mnr\",\n    \"routes\": [\n      {\n        \"id\": \"5\",\n        \"shortName\": \"Danbury\",\n        \"longName\": \"Danbury\",\n        \"type\": 2,\n        \"color\": \"EE0034\",\n        \"textColor\": \"FFFFFF\",\n        \"agency\": {\n          \"id\": \"1\",\n          \"name\": \"Metro-North Railroad\",\n          \"url\": \"http://www.mta.info/mnr\",\n          \"timezone\": \"America/New_York\"\n        }\n      },\n      {\n        \"...\": \"...\"\n      }\n    ]\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/routes/routes.js",    "groupTitle": "Routes"  },  {    "type": "GET",    "url": "/stops/:agency/:stopID",    "title": "Get Stop",    "name": "getStop",    "group": "Stops",    "description": "<p>Get the specified GTFS Stop for the specified agency.</p>",    "permission": [      {        "name": "gtfs",        "title": "API-Access: gtfs",        "description": "<p>These API endpoints require an API client key with 'gtfs' privileges.  These endpoints query the agencies' Right Track Databases and display the GTFS data classes.</p>"      }    ],    "parameter": {      "fields": {        "Headers": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Token {API Key}</p>"          }        ],        "Path Parameters": [          {            "group": "Path",            "type": "string",            "optional": false,            "field": "agency",            "description": "<p>RT Agency Code</p>"          },          {            "group": "Path",            "type": "string",            "optional": false,            "field": "stopID",            "description": "<p>GTFS Stop ID</p>"          }        ]      }    },    "error": {      "fields": {        "5xx Error Codes": [          {            "group": "5xx Error Codes",            "optional": false,            "field": "500",            "description": "<p>Internal Server Error</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5001",            "description": "<p>API Server Timeout</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5002",            "description": "<p>API Server Error</p>"          }        ],        "403 Error Codes": [          {            "group": "403 Error Codes",            "optional": false,            "field": "403",            "description": "<p>API Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4031",            "description": "<p>Debug Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4039",            "description": "<p>Authorization Header Format Error</p>"          }        ],        "404 Error Codes": [          {            "group": "404 Error Codes",            "optional": false,            "field": "4041",            "description": "<p>Unsupported Agency</p>"          },          {            "group": "404 Error Codes",            "optional": false,            "field": "4042",            "description": "<p>Stop Not Found</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Example Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"response\": {\n  \"agency\": \"mnr\",\n  \"stop\": {\n    \"id\": \"110\",\n    \"name\": \"Larchmont\",\n    \"lat\": 40.933394,\n    \"lon\": -73.759792,\n    \"url\": \"http://as0.mta.info/mnr/stations/station_detail.cfm?key=208\",\n    \"wheelchairBoarding\": 1,\n    \"statusId\": \"110\",\n    \"transferWeight\": 1171\n  }\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/stops/routes.js",    "groupTitle": "Stops"  },  {    "type": "GET",    "url": "/stops/:agency",    "title": "Get Stops",    "name": "getStops",    "group": "Stops",    "description": "<p>Get the GTFS Stops for the specified agency.  Optionally, add the query param ?hasFeed=true to request just the stops with a valid Status ID (ie Stops that have a Real-Time Station Feed).</p>",    "permission": [      {        "name": "gtfs",        "title": "API-Access: gtfs",        "description": "<p>These API endpoints require an API client key with 'gtfs' privileges.  These endpoints query the agencies' Right Track Databases and display the GTFS data classes.</p>"      }    ],    "parameter": {      "fields": {        "Headers": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Token {API Key}</p>"          }        ],        "Path Parameters": [          {            "group": "Path",            "type": "string",            "optional": false,            "field": "agency",            "description": "<p>RT Agency Code</p>"          }        ]      }    },    "error": {      "fields": {        "5xx Error Codes": [          {            "group": "5xx Error Codes",            "optional": false,            "field": "500",            "description": "<p>Internal Server Error</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5001",            "description": "<p>API Server Timeout</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5002",            "description": "<p>API Server Error</p>"          }        ],        "403 Error Codes": [          {            "group": "403 Error Codes",            "optional": false,            "field": "403",            "description": "<p>API Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4031",            "description": "<p>Debug Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4039",            "description": "<p>Authorization Header Format Error</p>"          }        ],        "404 Error Codes": [          {            "group": "404 Error Codes",            "optional": false,            "field": "4041",            "description": "<p>Unsupported Agency</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Example Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"response\": {\n    \"agency\": \"mnr\",\n    \"stops\": [\n      {\n        \"id\": \"168\",\n        \"name\": \"Ansonia\",\n        \"lat\": 41.344156,\n        \"lon\": -73.079892,\n        \"url\": \"http://as0.mta.info/mnr/stations/station_detail.cfm?key=292\",\n        \"wheelchairBoarding\": 0\n      },\n      {\n        \"...\": \"...\"\n      }\n    ]\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/stops/routes.js",    "groupTitle": "Stops"  },  {    "type": "GET",    "url": "/trips/:agency/:tripID",    "title": "Get Trip",    "name": "getTrip",    "group": "Trips",    "description": "<p>Get the specified GTFS Trip for the specified agency.</p>",    "permission": [      {        "name": "gtfs",        "title": "API-Access: gtfs",        "description": "<p>These API endpoints require an API client key with 'gtfs' privileges.  These endpoints query the agencies' Right Track Databases and display the GTFS data classes.</p>"      }    ],    "parameter": {      "fields": {        "Headers": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Token {API Key}</p>"          }        ],        "Path Parameters": [          {            "group": "Path",            "type": "string",            "optional": false,            "field": "agency",            "description": "<p>RT Agency Code</p>"          },          {            "group": "Path",            "type": "string",            "optional": false,            "field": "tripID",            "description": "<p>GTFS Trip ID</p>"          }        ]      }    },    "error": {      "fields": {        "5xx Error Codes": [          {            "group": "5xx Error Codes",            "optional": false,            "field": "500",            "description": "<p>Internal Server Error</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5001",            "description": "<p>API Server Timeout</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5002",            "description": "<p>API Server Error</p>"          }        ],        "403 Error Codes": [          {            "group": "403 Error Codes",            "optional": false,            "field": "403",            "description": "<p>API Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4031",            "description": "<p>Debug Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4039",            "description": "<p>Authorization Header Format Error</p>"          }        ],        "404 Error Codes": [          {            "group": "404 Error Codes",            "optional": false,            "field": "4041",            "description": "<p>Unsupported Agency</p>"          },          {            "group": "404 Error Codes",            "optional": false,            "field": "4042",            "description": "<p>Trip Not Found</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Example Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"response\": {\n    \"agency\": \"mnr\",\n    \"trip\": {\n      \"id\": \"7972842\",\n      \"route\": {\n        \"id\": \"3\",\n        \"shortName\": \"New Haven\",\n        \"longName\": \"New Haven\",\n        \"type\": 2,\n        \"color\": \"EE0034\",\n        \"textColor\": \"FFFFFF\",\n        \"agency\": {\n          \"id\": \"1\",\n          \"name\": \"Metro-North Railroad\",\n          \"url\": \"http://www.mta.info/mnr\",\n          \"timezone\": \"America/New_York\"\n        }\n      },\n      \"shortName\": \"6528\",\n      \"wheelchairAccessible\": 1,\n      \"direction\": {\n        \"id\": 0,\n        \"description\": \"Outbound\"\n      },\n      \"stops\": [\n        {\n          \"stop\": {\n            \"id\": \"1\",\n            \"name\": \"Grand Central Terminal\",\n            \"lat\": 40.752998,\n            \"lon\": -73.977056,\n            \"url\": \"http://as0.mta.info/mnr/stations/station_detail.cfm?key=1\",\n            \"wheelchairBoarding\": 1\n          },\n          \"arrival\": {\n            \"time\": \"12:34 PM\",\n            \"seconds\": 45240\n          },\n          \"departure\": {\n            \"time\": \"12:34 PM\",\n            \"seconds\": 45240\n          },\n          \"stopSequence\": 1,\n          \"pickupType\": 0,\n          \"dropOffType\": 0\n        },\n        {\n          \"...\": \"...\"\n        }\n      ]\n    }\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/trips/routes.js",    "groupTitle": "Trips"  },  {    "type": "POST",    "url": "/users",    "title": "Add User",    "name": "addUser",    "group": "Users",    "description": "<p>Register a new User and add their information to the API Server database.  This will check to make sure the User's email, username and password all meet the requirements set by the Server.</p>",    "permission": [      {        "name": "registration",        "title": "API-Access: registration",        "description": "<p>These API endpoints require an API client key with 'registration' privileges.  These endpoints allow the client to register new Users and remove existing Users.</p>"      }    ],    "parameter": {      "fields": {        "Headers": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Token {API Key}</p>"          },          {            "group": "Header",            "type": "string",            "allowedValues": [              "\"application/json\"",              "\"application/x-www-form-urlencoded\""            ],            "optional": false,            "field": "Content-Type",            "description": "<p>Media type of the Request body.</p>"          }        ],        "Body Parameters": [          {            "group": "Body",            "type": "string",            "optional": false,            "field": "email",            "description": "<p>The User's email address</p>"          },          {            "group": "Body",            "type": "string",            "optional": false,            "field": "username",            "description": "<p>The User's username</p>"          },          {            "group": "Body",            "type": "string",            "optional": false,            "field": "password",            "description": "<p>The User's password</p>"          }        ]      }    },    "error": {      "fields": {        "5xx Error Codes": [          {            "group": "5xx Error Codes",            "optional": false,            "field": "500",            "description": "<p>Internal Server Error</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5001",            "description": "<p>API Server Timeout</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5002",            "description": "<p>API Server Error</p>"          }        ],        "403 Error Codes": [          {            "group": "403 Error Codes",            "optional": false,            "field": "403",            "description": "<p>API Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4031",            "description": "<p>Debug Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4039",            "description": "<p>Authorization Header Format Error</p>"          }        ],        "400 Error Codes": [          {            "group": "400 Error Codes",            "optional": false,            "field": "4001",            "description": "<p>Email Not Valid</p>"          },          {            "group": "400 Error Codes",            "optional": false,            "field": "4002",            "description": "<p>Email Already Registered</p>"          },          {            "group": "400 Error Codes",            "optional": false,            "field": "4003",            "description": "<p>Username Not Valid</p>"          },          {            "group": "400 Error Codes",            "optional": false,            "field": "4004",            "description": "<p>Username Already Registered</p>"          },          {            "group": "400 Error Codes",            "optional": false,            "field": "4005",            "description": "<p>Password Not Valid</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Example Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"response\": {\n    \"user\": {\n      \"id\": \"f094eebab41c4f4fa209f8af48b51d4b\",\n      \"username\": \"user1\",\n      \"email\": \"test@example.com\",\n      \"verified\": false,\n      \"lastModifiedUser\": \"2017-09-24T20:56:00.000Z\",\n      \"lastModifiedPassword\": \"2017-09-24T20:56:00.000Z\",\n      \"sessions\": []\n    }\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/users/routes.js",    "groupTitle": "Users"  },  {    "type": "GET",    "url": "/users/:userID",    "title": "Get User",    "name": "getUser",    "group": "Users",    "description": "<p>Get the registration and session information for the specified User.</p>",    "permission": [      {        "name": "auth",        "title": "API-Access: auth",        "description": "<p>These API endpoints require an API client key with 'auth' privileges.  These endpoints allow User's to login and logout of the client.</p>"      }    ],    "parameter": {      "fields": {        "Headers": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Token {API Key}</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "X-Session-Token",            "description": "<p>{User Session Token}</p>"          }        ],        "Path Parameters": [          {            "group": "Path",            "type": "string",            "optional": false,            "field": "userID",            "description": "<p>Public ID</p>"          }        ]      }    },    "error": {      "fields": {        "5xx Error Codes": [          {            "group": "5xx Error Codes",            "optional": false,            "field": "500",            "description": "<p>Internal Server Error</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5001",            "description": "<p>API Server Timeout</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5002",            "description": "<p>API Server Error</p>"          }        ],        "403 Error Codes": [          {            "group": "403 Error Codes",            "optional": false,            "field": "403",            "description": "<p>API Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4031",            "description": "<p>Debug Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4039",            "description": "<p>Authorization Header Format Error</p>"          }        ],        "401 Error Codes": [          {            "group": "401 Error Codes",            "optional": false,            "field": "401",            "description": "<p>Not Authorized</p>"          },          {            "group": "401 Error Codes",            "optional": false,            "field": "4011",            "description": "<p>X-Session-Token Header Not Sent</p>"          },          {            "group": "401 Error Codes",            "optional": false,            "field": "4012",            "description": "<p>Session Expired</p>"          }        ],        "404 Error Codes": [          {            "group": "404 Error Codes",            "optional": false,            "field": "4043",            "description": "<p>User Not Found</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Example Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"response\": {\n    \"user\": {\n      \"id\": \"f094eebab41c4f4fa209f8af48b51d4b\",\n      \"username\": \"user1\",\n      \"email\": \"test@example.com\",\n      \"verified\": false,\n      \"lastModifiedUser\": \"2017-09-24T20:56:00.000Z\",\n      \"lastModifiedPassword\": \"2017-09-24T20:56:00.000Z\",\n      \"sessions\": [\n        {\n          \"id\": \"fc8eb1473a1140c7ba24dec58b85bacc\",\n          \"client_name\": \"Debug Account\",\n          \"created\": \"2017-09-24T20:59:00.000Z\",\n          \"accessed\": \"2017-09-24T20:59:00.000Z\",\n          \"inactive\": \"2017-09-25T20:59:00.000Z\",\n          \"expires\": \"2027-09-22T20:59:00.000Z\"\n        },\n        {\n          \"...\": \"...\"\n        }\n      ]\n    }\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/users/routes.js",    "groupTitle": "Users"  },  {    "type": "GET",    "url": "/users",    "title": "Get Users",    "name": "getUsers",    "group": "Users",    "description": "<p>Get the registration and session information for all registered Users.  Optionally filter by email and/or username.</p>",    "permission": [      {        "name": "debug",        "title": "API-Access: debug",        "description": "<p>These API endpoints require an API client key with 'debug' privileges.  These endpoints can display sensitive information and need to be explicitly enabled.</p>"      }    ],    "parameter": {      "fields": {        "Headers": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Token {API Key}</p>"          }        ],        "Query Arguments": [          {            "group": "Query",            "type": "string",            "optional": true,            "field": "email",            "description": "<p>Filter by email address</p>"          },          {            "group": "Query",            "type": "string",            "optional": true,            "field": "username",            "description": "<p>Filter by username</p>"          }        ]      }    },    "error": {      "fields": {        "5xx Error Codes": [          {            "group": "5xx Error Codes",            "optional": false,            "field": "500",            "description": "<p>Internal Server Error</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5001",            "description": "<p>API Server Timeout</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5002",            "description": "<p>API Server Error</p>"          }        ],        "403 Error Codes": [          {            "group": "403 Error Codes",            "optional": false,            "field": "403",            "description": "<p>API Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4031",            "description": "<p>Debug Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4039",            "description": "<p>Authorization Header Format Error</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Example Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"response\": {\n    \"users\": [\n      {\n        \"id\": \"f094eebab41c4f4fa209f8af48b51d4b\",\n        \"username\": \"user1\",\n        \"email\": \"test@example.com\",\n        \"verified\": false,\n        \"lastModifiedUser\": \"2017-09-24T20:56:00.000Z\",\n        \"lastModifiedPassword\": \"2017-09-24T20:56:00.000Z\",\n        \"sessions\": [\n          {\n            \"id\": \"fc8eb1473a1140c7ba24dec58b85bacc\",\n            \"client_name\": \"Debug Account\",\n            \"created\": \"2017-09-24T20:59:00.000Z\",\n            \"accessed\": \"2017-09-24T20:59:00.000Z\",\n            \"inactive\": \"2017-09-25T20:59:00.000Z\",\n            \"expires\": \"2027-09-22T20:59:00.000Z\"\n          }\n        ]\n      },\n      {\n        \"...\": \"...\"\n      }\n    ]\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/users/routes.js",    "groupTitle": "Users"  },  {    "type": "OPTIONS",    "url": "/users",    "title": "Registration Requirements",    "name": "registrationRequirements",    "group": "Users",    "description": "<p>Get the User registration requirements for a new User's username and password.</p>",    "permission": [      {        "name": "registration",        "title": "API-Access: registration",        "description": "<p>These API endpoints require an API client key with 'registration' privileges.  These endpoints allow the client to register new Users and remove existing Users.</p>"      }    ],    "parameter": {      "fields": {        "Headers": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Token {API Key}</p>"          }        ]      }    },    "error": {      "fields": {        "5xx Error Codes": [          {            "group": "5xx Error Codes",            "optional": false,            "field": "500",            "description": "<p>Internal Server Error</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5001",            "description": "<p>API Server Timeout</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5002",            "description": "<p>API Server Error</p>"          }        ],        "403 Error Codes": [          {            "group": "403 Error Codes",            "optional": false,            "field": "403",            "description": "<p>API Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4031",            "description": "<p>Debug Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4039",            "description": "<p>Authorization Header Format Error</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Example Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"response\": {\n    \"requirements\": {\n      \"username\": {\n        \"cannotContain\": \"@ \",\n        \"minLength\": 4,\n        \"maxLength\": 64\n      },\n      \"password\": {\n        \"minLength\": 8,\n        \"maxLength\": 999,\n        \"requireLetters\": true,\n        \"requireUppercase\": false,\n        \"requireLowercase\": false,\n        \"requireDigits\": true,\n        \"requireSymbols\": false,\n        \"blockUsername\": true,\n        \"blacklist\": \"/Users/david/Documents/Development/right-track/src/api-server/password-blacklist.txt\"\n      }\n    }\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/users/routes.js",    "groupTitle": "Users"  },  {    "type": "DELETE",    "url": "/users/:userID",    "title": "Remove User",    "name": "removeUser",    "group": "Users",    "description": "<p>Remove the specified User from the Server database.</p>",    "permission": [      {        "name": "registration",        "title": "API-Access: registration",        "description": "<p>These API endpoints require an API client key with 'registration' privileges.  These endpoints allow the client to register new Users and remove existing Users.</p>"      }    ],    "parameter": {      "fields": {        "Headers": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Token {API Key}</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "X-Session-Token",            "description": "<p>{User Session Token}</p>"          }        ],        "Path Parameters": [          {            "group": "Path",            "type": "string",            "optional": false,            "field": "userID",            "description": "<p>Public ID</p>"          }        ]      }    },    "error": {      "fields": {        "5xx Error Codes": [          {            "group": "5xx Error Codes",            "optional": false,            "field": "500",            "description": "<p>Internal Server Error</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5001",            "description": "<p>API Server Timeout</p>"          },          {            "group": "5xx Error Codes",            "optional": false,            "field": "5002",            "description": "<p>API Server Error</p>"          }        ],        "403 Error Codes": [          {            "group": "403 Error Codes",            "optional": false,            "field": "403",            "description": "<p>API Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4031",            "description": "<p>Debug Access Denied</p>"          },          {            "group": "403 Error Codes",            "optional": false,            "field": "4039",            "description": "<p>Authorization Header Format Error</p>"          }        ],        "401 Error Codes": [          {            "group": "401 Error Codes",            "optional": false,            "field": "401",            "description": "<p>Not Authorized</p>"          },          {            "group": "401 Error Codes",            "optional": false,            "field": "4011",            "description": "<p>X-Session-Token Header Not Sent</p>"          },          {            "group": "401 Error Codes",            "optional": false,            "field": "4012",            "description": "<p>Session Expired</p>"          }        ],        "404 Error Codes": [          {            "group": "404 Error Codes",            "optional": false,            "field": "4043",            "description": "<p>User Not Found</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Example Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"status\": \"success\",\n  \"response\": {\n    \"user\": {}\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/routes/users/routes.js",    "groupTitle": "Users"  }]
